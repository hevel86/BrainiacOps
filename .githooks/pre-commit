#!/bin/bash
set -euo pipefail

echo "üîç Running TruffleHog scan on staged changes..."

# Optional manual bypass
if [ "${SKIP_TRUFFLEHOG:-}" = "1" ]; then
    echo "‚ö†Ô∏è  SKIP_TRUFFLEHOG=1 ‚Üí skipping TruffleHog scan."
    exit 0
fi

# Identify staged YAML, ENV, or JSON files
mapfile -d '' STAGED <<<"$(git diff --cached --name-only --diff-filter=ACM -z | grep -z -E '\.ya?ml$|\.env$|\.json$' || true)"

# Skip if no relevant files staged
if [ "${#STAGED[@]}" -eq 0 ]; then
    echo "‚úÖ No staged YAML, ENV, or JSON files to scan."
    exit 0
fi

# Require Docker CLI
if ! command -v docker >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Docker CLI not found ‚Üí skipping TruffleHog scan."
    exit 0
fi

# Require Docker daemon
if ! docker info >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Docker daemon unavailable ‚Üí skipping TruffleHog scan."
    exit 0
fi

# Convert to container paths
FILES=()
for f in "${STAGED[@]}"; do
    FILES+=("/repo/$f")
done

echo "üîç Running TruffleHog (filesystem) on ${#FILES[@]} staged file(s)..."
if ! docker run --rm -v "$(pwd):/repo" ghcr.io/trufflesecurity/trufflehog:latest \
    filesystem --no-update --only-verified --fail "${FILES[@]}"; then
    echo "‚ùå TruffleHog found potential secrets. Commit aborted."
    exit 1
fi

# Ensure staged YAML files end with a newline (fixes yamllint error)
mapfile -d '' YAML_STAGED <<<"$(git diff --cached --name-only --diff-filter=ACMR -z | grep -z -E '\.ya?ml$' || true)"

if [ "${#YAML_STAGED[@]}" -gt 0 ]; then
    echo "üßπ Ensuring final newline on YAML files..."
    for f in "${YAML_STAGED[@]}"; do
        # Skip if file no longer exists (renamed/deleted during staging)
        [ -f "$f" ] || continue

        if ! tail -c 1 -- "$f" | grep -q "^$"; then
            echo "‚Ü™ adding newline: $f"
            # Append a single newline at EOF
            sed -i '$a\' -- "$f"
            # Restage the fixed file
            git add -- "$f"
        fi
    done
fi

echo "‚úÖ TruffleHog found no issues. Proceeding with commit."
