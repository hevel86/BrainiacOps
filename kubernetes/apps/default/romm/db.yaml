apiVersion: apps/v1
kind: Deployment
metadata:
  name: romm-db
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: romm
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: romm
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: mariadb
          image: mariadb:12.0.2
          ports:
            - containerPort: 3306
              name: mysql
          envFrom:
            - secretRef:
                name: romm-secrets
          env:
            - name: MARIADB_DATABASE
              value: "romm"
            - name: MARIADB_USER
              value: "romm-user"
          readinessProbe:
            tcpSocket:
              port: mysql
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: romm-db
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: romm
    app.kubernetes.io/component: database
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
