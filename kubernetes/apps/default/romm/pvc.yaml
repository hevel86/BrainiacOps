# pvc.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-pvc
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn-prod # Use Longhorn storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: romm-resources-pvc
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn-prod # Use Longhorn storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: romm-redis-data-pvc
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: longhorn # Use Longhorn storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: romm-assets-pvc
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn-prod # Use Longhorn storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: romm-config-pvc
  labels:
    app.kubernetes.io/name: romm
    app.kubernetes.io/instance: romm
    app.kubernetes.io/component: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn-prod # Use Longhorn storage