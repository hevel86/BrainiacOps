# =========================
# Tdarr - AIO Manifest (GPU on cyborg, MetalLB)
# =========================

# --- PVs/PVCs (NFS) ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-configs-pv
spec:
  capacity: { storage: 5Gi }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/k3stor/tdarr/configs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-configs-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 5Gi } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-configs-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-server-pv
spec:
  capacity: { storage: 20Gi }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/k3stor/tdarr/server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-server-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 20Gi } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-server-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-logs-pv
spec:
  capacity: { storage: 10Gi }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/k3stor/tdarr/logs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-logs-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 10Gi } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-logs-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-movies-pv
spec:
  capacity: { storage: 10Ti }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/movies
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-movies-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 10Ti } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-movies-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-tv-pv
spec:
  capacity: { storage: 10Ti }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/tv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-tv-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 10Ti } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-tv-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tdarr-temp-pv
spec:
  capacity: { storage: 500Gi }
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
  nfs:
    server: truenas1-nfs.torquasmvo.internal
    path: /mnt/media/tdarr_temp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tdarr-temp-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteMany"]
  resources: { requests: { storage: 500Gi } }
  volumeMode: Filesystem
  storageClassName: ""
  volumeName: tdarr-temp-pv

# --- Deployment (GPU, pinned to cyborg) ---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr
  namespace: default
  labels:
    app: tdarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tdarr
  template:
    metadata:
      labels:
        app: tdarr
    spec:
      nodeSelector:
        kubernetes.io/hostname: cyborg
      runtimeClassName: nvidia
      containers:
        - name: tdarr
          image: ghcr.io/haveagitgat/tdarr:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: webui
              containerPort: 8265
              protocol: TCP
            - name: server
              containerPort: 8266
              protocol: TCP
            - name: node
              containerPort: 8267
              protocol: TCP
          env:
            - name: TZ
              value: "America/New_York"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: UMASK_SET
              value: "002"
            - name: serverIP
              value: "127.0.0.1"
            - name: serverPort
              value: "8266"
            - name: webUIPort
              value: "8265"
            - name: internalNode
              value: "true"
            - name: inContainer
              value: "true"
            # - name: ffmpegVersion
            #   value: "7"
            - name: nodeName
              value: "Cyborg"
            - name: auth
              value: "false"
            - name: openBrowser
              value: "true"
            - name: cronPluginUpdate
              value: ""
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "all"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          resources:
            limits:
              nvidia.com/gpu: "1"
          volumeMounts:
            - name: configs
              mountPath: /app/configs
            - name: server
              mountPath: /app/server
            - name: logs
              mountPath: /app/logs
            - name: movies
              mountPath: /mnt/storage/movies
              readOnly: true
            - name: tv
              mountPath: /mnt/storage/tv
              readOnly: true
            - name: temp
              mountPath: /tank1/temp/tdarr
          readinessProbe:
            tcpSocket:
              port: 8265
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8266
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: configs
          persistentVolumeClaim:
            claimName: tdarr-configs-pvc
        - name: server
          persistentVolumeClaim:
            claimName: tdarr-server-pvc
        - name: logs
          persistentVolumeClaim:
            claimName: tdarr-logs-pvc
        - name: movies
          persistentVolumeClaim:
            claimName: tdarr-movies-pvc
        - name: tv
          persistentVolumeClaim:
            claimName: tdarr-tv-pvc
        - name: temp
          persistentVolumeClaim:
            claimName: tdarr-temp-pvc

# --- Service (MetalLB) ---
---
apiVersion: v1
kind: Service
metadata:
  name: tdarr
  namespace: default
  labels:
    app: tdarr
spec:
  type: LoadBalancer
  loadBalancerIP: 10.0.0.204
  selector:
    app: tdarr
  ports:
    - name: webui
      port: 8265
      targetPort: 8265
      protocol: TCP
    - name: server
      port: 8266
      targetPort: 8266
      protocol: TCP
    - name: node
      port: 8267
      targetPort: 8267
      protocol: TCP
